import { updateLoginStatus } from "@/store/reducers/loginSlice";
import { Button, Grid, TextField, Typography } from "@mui/material";
import axios from "axios";
import Head from "next/head";
import Image from "next/image";
import { useRouter } from "next/router";
import { useState } from "react";
import { useDispatch } from "react-redux";

export default function Login() {
  const [loginInputs, setLoginInputs] = useState({
    username: "",
    password: "",
  });

  const dispatch = useDispatch();
  const router = useRouter();

  const login = async () => {
    try {
      const data = await axios.post("http://localhost:3000/api/login", {
        ...loginInputs,
      });
      window && window.localStorage.setItem("AUTHENTICATION", true);
      window && window.localStorage.setItem("USERNAME", loginInputs.username);
      dispatch(
        updateLoginStatus({ isLogin: true, username: loginInputs.username })
      );
      router.push(`/notes/${loginInputs.username}`);
      console.log(data);
    } catch (err) {
      console.log(err);
    }
  };

  return (
    <>
      <Head>
        <title>Notes - login</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Grid container>
          {/* text */}
          <Grid item>
            <Typography>
              Enter your Username and Password to login to Pocket Notes.
            </Typography>
          </Grid>
          {/* username & password*/}
          {/* button */}
          <Grid item>
            <form>
              <TextField
                name="username"
                onChange={(e) =>
                  setLoginInputs({ ...loginInputs, username: e.target.value })
                }
                placeholder="Username"
              />
              <TextField
                name="password"
                onChange={(e) =>
                  setLoginInputs({ ...loginInputs, password: e.target.value })
                }
                placeholder="Password"
              />
              <Button
                variant="contained"
                // type="submit"
                onClick={login}
              >
                Sign in
              </Button>
            </form>
          </Grid>
        </Grid>
      </main>
    </>
  );
}
